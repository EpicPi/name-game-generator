{"version":3,"sources":["components/App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clubName","mFile","fFile","out1","out2","mNames","step","fileUpload","bind","assertThisInitialized","textInput","getForm","onSubmit","getLoading","getOutput","processData","getNames","e","target","files","type","alert","value","setState","defineProperty","name","console","log","preventDefault","out","failed","JSZip","loadAsync","mzip","addSingles","filter","includes","fzip","fNames","searched","splitNames","getGenders","concat","mapNamesToOut","names","gender","_this2","forEach","n0","n1","i","probability","push","file","first","last","removeEnd","split","married","_this3","na","map","n","trim","pop","join","singles","_this4","zip","relativePath","zipEntry","dir","startsWith","error","message","res0","x","length","fetch","json","res1","_out$push","react_default","a","createElement","className","onChange","onClick","react_csv","data","filename","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d983af64.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport JSZip from 'jszip';\nimport { CSVLink } from \"react-csv\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      clubName: \"\",\n      mFile: \"\",\n      fFile: \"\",\n      out1: null,\n      out2: null,\n      mNames: [],\n      step: 0\n    }\n    this.fileUpload = this.fileUpload.bind(this);\n    this.textInput = this.textInput.bind(this);\n    this.getForm = this.getForm.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getLoading = this.getLoading.bind(this);\n    this.getOutput = this.getOutput.bind(this);\n    this.processData = this.processData.bind(this);\n    this.getNames = this.getNames.bind(this);\n  }\n  fileUpload(e){\n    if(e.target.files[0].type!==\"application/zip\"){\n      alert(\"please upload only zip files of the images\");\n      e.target.value = \"\";\n    }else{\n      this.setState({[e.target.name]: e.target.files[0]});\n    }\n  }\n  textInput(e){\n    this.setState({[e.target.name]: e.target.value});\n  }\n  async onSubmit(e){\n    console.log(this.state.mFile)\n    e.preventDefault();\n    this.setState({step:1});\n    this.processData()\n  }\n\n  async processData(){\n    let out = []\n    const failed = []\n    \n    const mzip = await JSZip.loadAsync(this.state.mFile);\n    let mNames = this.getNames(mzip);\n    this.addSingles(mNames,\"male\",out);\n    mNames = mNames.filter(name=>name.includes(\"&\"))\n\n    const fzip = await JSZip.loadAsync(this.state.fFile);\n    let fNames = this.getNames(fzip);\n    this.addSingles(fNames,\"female\",out);\n    fNames = fNames.filter(name=>name.includes(\"&\"))\n\n    \n    let searched = []\n\n    mNames = this.splitNames(mNames,failed);\n    mNames =await this.getGenders(mNames,searched);\n\n    fNames = this.splitNames(fNames,failed);\n    fNames = await this.getGenders(fNames,searched);\n\n    out = out.concat(this.mapNamesToOut(mNames,\"male\"));\n    out = out.concat(this.mapNamesToOut(fNames,\"female\"));\n\n    this.setState({out1:out});\n    this.setState({step:2});\n  }\n  mapNamesToOut(names, gender){\n    const out = []\n    names.forEach(name=>{\n\n      const n0 = name[name.names[0]]\n      const n1 = name[name.names[1]]\n      let i = 0;\n      if(n0.gender === n1.gender){\n        if (n0.gender !== gender)\n          i = (n0.probability > n1.probability)?1:0; // if wrong gender, choose one of lesser prob\n        else\n          i = (n0.probability < n1.probability)?1:0; // if right gender, choose one of more prob\n      }else{\n        i = (n0.gender===gender)?0:1; //if diff genders, choose correct gender\n      }\n      out.push(\n        {\n          file:name.file,\n          first:name.names[i],\n          last:this.removeEnd(name.file).split(\",\")[0],\n          gender,\n          married:\"true\"\n        });\n    });\n    return out;\n  }\n\n  splitNames(names,failed){\n    const splitNames = []\n    names.forEach(file=>{\n      try{\n        let na = this.removeEnd(file).split(',')[1].split(\"&\");\n        na = na.map(n=>n.trim());\n        splitNames.push({names:na,file});\n      }\n      catch(e){\n        failed.push(file);\n      }\n    });\n    return splitNames;\n  }\n  removeEnd(file){\n    let out = file.split('-');\n    out.pop();\n    return out.join(\"\");\n  }\n  addSingles(singles,gender,out){\n    singles = singles.filter(name=>!name.includes(\"&\"))\n    singles.forEach(file=>{\n      const name = this.removeEnd(file);\n      const first = name.split(',')[1];\n      const last = name.split(',')[0];\n      out.push({file,first,last,gender,married:\"false\"})\n    });\n  }\n  getNames(zip){\n    const names = []\n    try{\n      zip.forEach((relativePath, zipEntry) => {\n        if(!zipEntry.dir && !zipEntry.name.startsWith(\"__MACOSX\"))\n          names.push(zipEntry.name);\n      });\n    } catch(error){\n      alert(error.message);\n      this.setState({step:0});\n    }    \n    return names\n  }\n  async getGenders(names, searched){\n    const out = []\n    for (const n of names){\n        \n      let res0 = searched.filter(x=>x.name===n.names[0].split(' ')[0]);\n      if (!res0.length){\n        res0 = await (await fetch(\"https://api.genderize.io/?name=\"+n.names[0].split(' ')[0])).json();\n        searched.push(res0);\n      }else\n        res0 = res0[0]; \n        \n      let res1 = searched.filter(x=>x.name===n.names[1].split(' ')[0]);  \n      if (!res1.length){\n        res1 = await (await fetch(\"https://api.genderize.io/?name=\"+n.names[1].split(' ')[0])).json();\n        searched.push(res1);\n      }else\n        res1 = res1[0]; \n        \n      out.push({names:n.names,[n.names[0]]:res0,[n.names[1]]:res1,file:n.file});\n    }\n    return out;\n  }\n  getForm(){\n    return (\n      <div className=\"App\">\n      <form>\n        Club Name: <input type=\"text\" value= {this.state.clubName} name=\"clubName\" onChange={this.textInput}/>\n        <br/>\n        <br/>\n        Male zip file: <input type=\"file\" name=\"mFile\" onChange={this.fileUpload}/>\n        <br/>\n        <br/>\n        Female zip file: <input type=\"file\" name=\"fFile\" onChange={this.fileUpload}/>\n        <br/>\n        <br/>\n        <input type=\"submit\" value=\"Process\" onClick={this.onSubmit}/>\n      </form>\n      </div>\n    );\n  }\n  getLoading(){\n    return (\n      <div>\n        Loading\n      </div>\n    )\n  }\n  getOutput(){\n    return (\n      <div>\n        <CSVLink data={this.state.out1} filename={this.state.clubName+\"csv\"}>Download Name-Game CSV for {this.state.clubName}</CSVLink>;\n      </div>\n    )\n  }\n  render() {\n    if(this.state.step===0)\n      return this.getForm();\n    else if(this.state.step===1)\n      return this.getLoading()\n    else\n      return this.getOutput()\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}